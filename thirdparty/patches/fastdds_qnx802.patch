diff --git a/CMakeLists.txt b/CMakeLists.txt
index 53a512b..68e6552 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -86,6 +86,12 @@ else()
     endif()
 endif()
 
+# Disable SM_RUN_RESULT and SM_RUN_RESULT__TRYRUN_OUTPUT for QNX Cross-Compilation
+if(CMAKE_SYSTEM_NAME STREQUAL "QNX")
+    set(SM_RUN_RESULT OFF CACHE INTERNAL "Disable SM_RUN_RESULT for QNX")
+    set(SM_RUN_RESULT__TRYRUN_OUTPUT OFF CACHE INTERNAL "Disable SM_RUN_RESULT__TRYRUN_OUTPUT for QNX")
+endif()
+
 ###############################################################################
 # GCC colors if using CCache
 ###############################################################################
diff --git a/src/cpp/CMakeLists.txt b/src/cpp/CMakeLists.txt
index 6f66a18..16d27c5 100644
--- a/src/cpp/CMakeLists.txt
+++ b/src/cpp/CMakeLists.txt
@@ -486,7 +486,7 @@ target_link_libraries(${PROJECT_NAME} ${PRIVACY} fastcdr foonathan_memory
     $<$<BOOL:${LINK_SSL}>:OpenSSL::SSL$<SEMICOLON>OpenSSL::Crypto$<$<BOOL:${WIN32}>:$<SEMICOLON>crypt32.lib>>
     $<$<BOOL:${WIN32}>:iphlpapi$<SEMICOLON>Shlwapi>
     ${THIRDPARTY_BOOST_LINK_LIBS}
-    PRIVATE eProsima_atomic
+    PRIVATE eProsima_atomic fsnotify socket
     )
 
 if(MSVC OR MSVC_IDE)
diff --git a/thirdparty/filewatch/FileWatch.hpp b/thirdparty/filewatch/FileWatch.hpp
index 1ed0c66..62eb7ed 100644
--- a/thirdparty/filewatch/FileWatch.hpp
+++ b/thirdparty/filewatch/FileWatch.hpp
@@ -508,7 +508,7 @@ namespace filewatch {
 
                 std::chrono::time_point<std::chrono::system_clock> current_time;
                 current_time += std::chrono::seconds(result.st_mtim.tv_sec);
-                current_time += std::chrono::nanoseconds(result.st_mtim.tv_nsec);
+                current_time += std::chrono::duration_cast<std::chrono::microseconds>(std::chrono::nanoseconds(result.st_mtim.tv_nsec));
 
                 unsigned long current_size = result.st_size;
 
@@ -605,7 +605,7 @@ namespace filewatch {
             stat(_path.c_str(), &result);
 
             last_write_time_ += std::chrono::seconds(result.st_mtim.tv_sec);
-            last_write_time_ += std::chrono::nanoseconds(result.st_mtim.tv_nsec);
+            last_write_time_ += std::chrono::duration_cast<std::chrono::microseconds>(std::chrono::nanoseconds(result.st_mtim.tv_nsec));
 
             // Initialize filesize
             last_size_ = result.st_size;
